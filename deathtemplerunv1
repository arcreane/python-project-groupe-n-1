import pygame
import sys
import random

pygame.init()
WIDTH, HEIGHT = 800, 600
SCREEN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Temple Escape")
CLOCK = pygame.time.Clock()

# Couleurs
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 200, 0)
RED = (200, 0, 0)

# Joueur
player = pygame.Rect(WIDTH//2 - 25, HEIGHT - 100, 50, 50)
player_speed = 10

# Obstacles
obstacles = []
obstacle_timer = 0
obstacle_interval = 30
score = 0

font = pygame.font.SysFont(None, 48)

def draw_text(text, color, y):
    t = font.render(text, True, color)
    SCREEN.blit(t, (WIDTH // 2 - t.get_width() // 2, y))

def temple_run():
    global obstacle_timer, obstacles, score
    obstacles = []
    obstacle_timer = 0
    score = 0
    running = True

    while running:
        SCREEN.fill(BLACK)

        # DÃ©placement joueur
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and player.x > 0:
            player.x -= player_speed
        if keys[pygame.K_RIGHT] and player.x < WIDTH - player.width:
            player.x += player_speed

        # Obstacles
        obstacle_timer += 1
        if obstacle_timer >= obstacle_interval:
            obstacle_timer = 0
            x_pos = random.randint(0, WIDTH - 50)
            obstacles.append(pygame.Rect(x_pos, -50, 50, 50))


        for obs in obstacles[:]:
            obs.y += 7
            if obs.y > HEIGHT:
                obstacles.remove(obs)
                score += 1
            if player.colliderect(obs):
                draw_text("Game Over!", RED, HEIGHT // 2)
                pygame.display.flip()
                pygame.time.wait(2000)
                return False


        pygame.draw.rect(SCREEN, GREEN, player)
        for obs in obstacles:
            pygame.draw.rect(SCREEN, RED, obs)
        draw_text(f"Score: {score}", WHITE, 20)

        pygame.display.flip()
        CLOCK.tick(30)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

    return True


if __name__ == "__main__":
    temple_run()
